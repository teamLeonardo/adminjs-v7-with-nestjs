// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id          Int      @id @default(autoincrement())
  name        String   @unique @db.VarChar(100)
  description String?  @db.Text
  permissions Json     @default("[]")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  // Relaciones
  users User[]

  @@map("roles")
}

model User {
  id           Int      @id @default(autoincrement())
  username     String   @unique @db.VarChar(100)
  email        String   @unique @db.VarChar(255)
  passwordHash String   @map("password_hash") @db.VarChar(255)
  firstName    String?  @map("first_name") @db.VarChar(100)
  lastName     String?  @map("last_name") @db.VarChar(100)
  isActive     Boolean  @default(true) @map("is_active")
  language     String   @default("es") @db.VarChar(10)
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  // Relaciones
  roleId Int? @map("role_id")
  role   Role? @relation(fields: [roleId], references: [id])

  @@map("users")
}

model Organization {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  email     String?  @db.VarChar(255)
  phone     String?  @db.VarChar(50)
  address   String?  @db.Text
  city      String?  @db.VarChar(100)
  country   String?  @db.VarChar(100)
  postalCode String? @map("postal_code") @db.VarChar(20)
  website   String?  @db.VarChar(255)
  description String? @db.Text
  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("organizations")
}

model Department {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  description String?  @db.Text
  organizationId Int?  @map("organization_id")
  isActive    Boolean  @default(true) @map("is_active")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("departments")
}

model AuditLog {
  id        Int      @id @default(autoincrement())
  userId    Int?     @map("user_id")
  action    String   @db.VarChar(100)
  tableName String   @map("table_name") @db.VarChar(100)
  recordId  Int?     @map("record_id")
  oldValues Json?    @map("old_values")
  newValues Json?    @map("new_values")
  ipAddress String?  @map("ip_address") @db.VarChar(45)
  userAgent String?  @map("user_agent") @db.Text
  createdAt DateTime @default(now()) @map("created_at")

  @@map("audit_logs")
}
